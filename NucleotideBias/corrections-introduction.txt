voici mes retours concernant l’introduction de ton article 1, pour lequel il me semble que beaucoup reste encore à construire.

Tu as proposé un petit script pour l’intro, mais je crois que tu ne pars pas forcément du bon bout, donc j’y vais franchement.
:)

Il me semble qu'il faut motiver de façon beaucoup plus concrète: en partant des modèles à codons tels qu’ils sont utilisés.
Par ailleurs, il faut bien faire ressortir les problèmes, également en s’appuyant sur les pratiques courantes en la matière 
(par exemple, l’utilisation de modèles 3x4).
Enfin, il faut bien faire ressortir à la fois l’objet conceptuel du papier, mais malgré tout, les implications pratiques que cela pourrait avoir.

Un autre point: bien élaborer la question du statut de omega, et plus généralement des modèles à codons classiques, de leur statut phénoménologique, de ce que cela veut dire exactement.
Parler en passant des modèles mut-sel est important, pour bien construire le paysage actuel des modèles à codons, mais aussi parce que tu utilises un modèle de type mut-sel en simulation dans cet article.

En fait, il me semble d’ailleurs que c’est un point qui fait écho à la dernière section de ton chapitre sur les modèles à codons, au moment où tu fais la comparison entre modèles à codons classiques et modèles à codons mutsel.
On.y reviendra dans un deuxième temps, mais il me semble qu’il faudra bien renforcer cette partie là de ton introduction.

petite remarque en passant:
tu invoques souvent le fait de correctement séparer mutation, sélection * et dérive *.
mais je trouve que ca rend le discours inutilement compliqué.
En plus, quand on y pense, la dérive est partout
Après tout, les mutations synonymes sont elles-aussi sujettes à la dérive,
et pourtant Ne n’apparaît pas du tout dans leur cas
Donc, c’est faux de voir la dérive et la sélection conjointement encapsulée uniquement dans le paramètre omega, comme tu as l’air de le sous-entendre.

Personnellement, je verrais plutôt la dérive, ou plus exactement la taille de pop, comme ce qui détermine la température d’arbitrage entre mutation et sélection
Mais je ne verrais pas la dérive comme une ‘force évolutive’, aux côtés de la mutation et de la sélection
Si ca permet de clarifier un peu son statut ...

==

bon, mais en tout cas, voici ce que je pourrais imaginer comme fil conducteur
j’ai mis entre crochets [] les idées non essentielles.

==

** Introducing codon models and their usefulness **
- Phylogenetic codon models now routinely used in many domains of bioinformatics and molecular evolutionary studies.
- most often used to characterize the selective regimes, or genes, or sites, having experienced positive selection.
- more generally: understanding the respective contributions of mutation, selection and drift (and other forces, such as gBGC),
and the causes of their variation between genes or across species (refs).

** introducing the idea of a single omega **
- conceptually, codon models take advantage of the fact that syn and non-syn substitutions are differentially impacted by selection
- assuming synonymous mutations are neutral: syn rate = mut rate
- non-syn subst, on the other hand, reflect the combined effect of mutation and selection.
- classical codon models formalize this idea by invoking a single parameter omega, acting multiplicatively on non-syn substs rates.
- as a result, this parameter omega capture the net, or aggregate, effect of selection on non-synonymous mutations.
[- using a parametric model automatically corrects for the multiplicity issues created by the complex structure of the genetic code and by uneven mutation rates between nucleotides.]

** elaborating on the phenomenological versus mechanistic, classical versus mutsel, distinction **
- classical codon models, so defined, are phenomenological: capture a complex mixture of selective effects through single parameter
- In reality, the selective effects of associated with non-synonymous mutations depend on the context
(position, initial final amino acid, etc)
- attempts at an explicitly modeling of these complex selective landscapes: mechanistic codon models, 
basd on the mut-sel formalism.
- however, computationally complex, and robustness issues (violation of assumptions about the fitness landscape)
- classical codon models therefore remain an attractive, potentially more robust, although still perfectible, approach.

** bringing in the key issue here: correctly teasing apart mutation and selection **
- This simple parametric design of current classical models raises an important question: 
- by capturing selection through a single parameter, omega, is the mutational pro- cess estimated reliably? 
- There are indications that this is not the case.
• in their simplest form, classical codon models predict that the nucleotide composition should be the same for all 3 positions of the codons —> and should be equal to the nucleotide equilibrium frequencies implied by the underlying nucleotide substitution rate matrix.
Faut aller jusqu’au bout de l’argument: In reality: composition differ: the 3d position shows more extreme composition, reflecting the underlying mutation bias, compared to 1st and 2d positions, which are typically closer to 50% GC.
[- As show below, this pattern can also be reproduced in simulations assuming a protein-coding sequence at mutation-selection balance under a time-independent fitness landscape (already shown in earlier papers?).]

** Ici, je pense qu’il faut un peu développer sur le formalisme 3x4, qui est directement pertinent **
These modulations across the 3 coding positions has been accomodated using the so-called 3x4 formalism: 
allowing for different nucleotide rate matrices at the three positions.
However, this is problematic: has the consequence that synonymous substitutions, say, from A to C, occurr at different rates at the 1st and 3d positions
Yet, in reality, the mutation process is blind to the coding structure, and should be homogeneous across coding positions
If neutral, all synonymous A->C should have same rate

In any case: this suggests that the mutation matrix (F1x4) or matrices (F3x4) estimated by codon models are not correctly reflecting the mutation rates between nucleotides
Instead, what these matrices are capturing is the result of the compromise between mutation and selection at the level of the realized nucleotide frequencies.

** potential impact of these problems: both practical and conceptual **
- For detecting selection, this problem is probably minor

- Conceptually, however: a clear symptom of a more fundamental problem: mutation rates and fixation biases are not correctly teased apart.
- Practically, could have important consequences in other contexts than tests of positive selection:
- in particular, there is a current interest in investigating the variation between species in GC content, and its effect on the evolution of protein-coding sequences

- A particularly important factor here: gBGC, which can confound the tests for detecting positive selection.
- Even in the absence of gBGC, however, uneven mutation rates, varying across species, can have an important impact on the estimation of the strength of selection, through omega (ref).
- All this suggests that, even before introducing gBGC in codon models, correctly formalizing the interplay between mutation and selection in current codon models would be an important thing to do.

** the mut-sel balance revisited: an equilibrium between two net forces **
In this direction, the key point that needs to be correctly formalized is that,
since the realized nucleotide frequencies is the result of a compromise between mutation and selection,
then this implies that the strength of selection is not the same between all nucleotide or amino-acid pairs.
For instance, if the mutation process is AT-biased, because of selection,
the realized nucleotide frequencies at equilibrium will be less AT-biased than expected under the mutation process.
However, this implies that, at equilibrium, there will be a net mutation pressure towards AT,
which has to be compensated for by a net selection differential towards GC,
i.e
mutations towards AT will be more deleterious on average than those towards GC.
As a result, the net dN/dS towards AT will be lower than the net dN/dS towards GC.

** introducing omega as a tensor **
All this suggests that,
in order for a codon model to correctly formalize this subtle interplay between mutation and selection,
the component of the parameter vector responsible for absorbing the net effect of selection (i.e
omega)
should not be a scalar, as is currently the case.
Instead, it should be a tensor: an array of omega values unfolding along multiple directions.
However, how many components should this tensor contain?
More generally, 
what is the simplest parametric structure able to correctly tease apart mutation rates on one hand,
and net fixation biases caused by selection on the other hand,
and this, without having to explicitly model the underlying fitness landscape?

** end of introduction: outline of the mean-field approach and of the results — à compléter à la fin **
In the present work, we address this question.
In order to derive a codon model along those lines, 
our strategy is to first assume a true evolutionary process, follow the mutation-selection formalism

For the sake of simplicity and illustration, we assume a site-independent, time-independent fitness landscape,
however, the argument is more general.
Then, we derive the mean substitution process implied across all sites by this site-specific mechanistic model.
This mean-field 61x61 substitution matrix is expressed in terms of mutation rates and average fixation probabilities.
Finally, we identify the average fixation probabilities appearing in this expression with the omega tensor we are looking for.
What we show is that we should in fact invoke as many distinct omega parameters
as there are pairs of amino acids that are nearest-neighbors in the genetic code.
There are reversibility conditions, reducing the dimensionality and allowing for a GTR-like parameterization of this tensor.
Using simulations, we show that the model correctly estimates the mutation rates.

Je me rends compte que le reste de l’article 1 est encore insuffisamment développé pour pouvoir faire des remarques de détail
Je vais donc te laisser développer tout cela
En fait, je me rends compte que c’était également vrai pour l’intro
J’aurais pu te laisser la développer un peu avant de t’envoyer le mail précédent
Mais bon, d’un autre côté, mes suggestions te donnent un support pour avancer plus vite sur cet article.

Pour la structure d’ensemble, ce que tu proposes actuellement me semble globalement correct
Peut-être juste:
- bien faire un outline du papier au début des résultats.
- par ailleurs, il me semble que le modèle champ-moyen est un cas de modèle phénoménologique
Il faudrait donc le mettre dans la même sous-section que le modèle Muse and Gaut

- enfin, je mettrais les inférences sur des données empiriques dans une section à part.

ce qui donnerait donc:

7.3
Results

Outline:
- we first conduct a simulation experiment using a simple mutation-selection model with time-independent fitness landscape.
two parameters, tuning the mutation bias and the stirngency of selection; we explore, through summary statistics, the intricate interplay between mutation and selection, as a function of lambda and alpha
- in a second step, we explore how codon models with alternative parameterizations are able to capture the mutation and fixation biases created by the simulation experiments.

7.3.1 Simulation experiments

7.3.1.1- brief description of the simulation model and the simulation settings
7.3.1.2 - observed behavior, as you propose
7.3.1.3 - main conclusions

7.3.2 Parameter inference on simulated data

7.3.2.1: Omega as a scalar: the Muse and Gaut formalism
7.3.2.2: Omega as a tensor: mean-field derivation
7.3.2.3: Results under the mean field model

7.3.3
Estimation on empirical sequence data.

==

Également dans les méthodes:
Pas clair, comme cela, que tout ce que tu dis au début (‘modeling mutation bias’, ‘modeling selection’) est en contexte de simulation

Il faudrait avoir 4 sections bien distinctes:
- Simulation model
- Summary statistics:
faire l’inventaire, et y mettre ici les ‘fixation biases’ , dont la formule 7.18
- Simulation settings
- Inference method (en utilisant hyphy).





